// Generated by CoffeeScript 1.9.3
$(function() {
  var Point, colorsArr, filed, points, pointsFiled, win;
  filed = $('.field');
  win = $(window);
  pointsFiled = $('#points');
  colorsArr = ['#2980b9', '#f1c40f', '#2c3e50', '#1abc9c', '#bdc3c7', '#e74c3c'];
  Point = (function() {
    function Point(x, y) {
      this.x = x;
      this.y = y;
    }

    Point.prototype.listeners = function() {
      filed.on('mousemove', (function(_this) {
        return function(e) {
          return _this.createPoint(e);
        };
      })(this));
      win.on('resize', (function(_this) {
        return function() {
          return _this.getCenterField();
        };
      })(this));
      return this.getCenterField();
    };

    Point.prototype.getCenterField = function() {
      var h, w;
      w = filed.innerWidth();
      h = filed.innerHeight();
      return TweenMax.set('svg', {
        attr: {
          viewBox: "0 0 " + w + " " + h
        }
      });
    };

    Point.prototype.createPoint = function(e) {
      var newElement;
      newElement = document.createElementNS("http://www.w3.org/2000/svg", 'circle');
      filed[0].appendChild(newElement);
      TweenMax.set(newElement, {
        attr: {
          fill: this.randomColor(colorsArr),
          cx: e.pageX,
          cy: e.pageY,
          r: 20
        }
      });
      return this.move(newElement);
    };

    Point.prototype.move = function(el) {
      var angle, deleteEl, hideCircle, poolRadius, radius, randomScale, xCenter, yCenter;
      xCenter = 0;
      yCenter = 0;
      poolRadius = 500;
      angle = Math.random() * Math.PI * 2;
      radius = Math.random() * poolRadius;
      randomScale = Math.random() * (2 - 0);
      deleteEl = function() {
        return $(el).remove();
      };
      hideCircle = function() {
        return TweenMax.to(el, 1, {
          scale: 0,
          transformOrigin: "center center",
          ease: Power4.easeInOut,
          onComplete: deleteEl
        });
      };
      return TweenMax.to(el, 1, {
        x: Math.cos(angle) * radius + xCenter,
        y: Math.sin(angle) * radius + yCenter,
        scale: randomScale,
        ease: Bounce.easeOut,
        onComplete: hideCircle
      });
    };

    Point.prototype.randomColor = function(arr) {
      var rc;
      rc = Math.floor(Math.random() * (arr.length - 1));
      return arr[rc];
    };

    return Point;

  })();
  points = new Point;
  return points.listeners();
});
